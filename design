schema
- manifest db
-- tables
--- paths
 path (/foo/bar)
 type (file | directory | symlink)
 parent (/foo) : / doesn't have a parent
 target (/foo/bar -> /foo/baz)
 package (thing) : only files and symlinks have a package
 bundles (list of bundle a path is in directly)
 update_version (version of os path found in)
 disk_size (file size)
 download_size (compressed file size)
 hash (sha2)
--- packages
 name (thing)
 paths (list of paths in package)
 requires (list of run-time dependency packages)
 bundles (list of bundles a package is in directly)
 update_version (version of os package found in)
 package_version (version of package)
 disk_size (size of all file content in a package)
 download_size (compressed file with all files in package)
 hash (sha2)
--- bundles
 name (thinger)
 includes (list of other bundles this bundle contains)
 packages (list of packages directly in this bundle)
 paths (list of files directly in this bundle)
 update_version (version of os bundle found in)
 disk_size (size of all file content in a bundle)
 download_size (compressed file with all files in bundle)
 hash (sha2)
--- manifest
 name (mix name)
 format (7)
 content_url (https://stuff/update)
 version_url (https://stuff/update)
 version (13000)
--- deltas
 from_version (13000)
 to_version (13010)
 type (file | package | bundle)
 type_id (/foo/bar | thing | thinger)
--- renames
 from_version (13000)
 to_version (13010)
 from_path (/foo/bar)
 to_path (/foo/baz)
-- details
 sqlite
 generated by backend
 needs swupd-client cmdline frontend hooks
 ro generated per release
- installed db
-- tables
--- installed
type (path | package | bundle)
type_id (/foo/bar | thing | thinger)
manually_installed (true | false)
-- details
 sqlite
 generated by frontend
 can be regenerated from existing filesystem if needed
 needs swupd-client cmdline frontend hooks
 db in /var tracking manual installed files/packages/bundles

ideas
- directories not owned by package
- files/symlinks unique per package (per mix?)
- single full chroot of all packages (per mix?)
- can still do packs based on bundles like current swupd
- allows user to install single files with full path (which pull in the file's package)
- allows user to install single package
- allows user to install full bundle
- metadata of bundle content information integrated fully into swupd backend
- can do packs based on common dependency chains/large packages
- can allow clients to optimize for download size vs # of requests (maybe even auto tune for speed)
 download manifest db to compare # of things needed vs size of content
 can look at download size and delta availability
- delta and renames tables can contain all occurances for a given format #
- dependency information comes from rpm file (fed in through chroot builder to the swupd backend)
 need autospec to learn requires_add/requires_ban
 need secondary source for run time requirements that can be merged with chroot builder meta data (mixer needs)
 could come from same source as bundle definition meta data
- mix addition only capable (two dbs per mix) : need more thought how multiple (3+) mixes interact
 can reference other mixes and use them as dependencies
 duplication allowed (all hashes must match between dbs)
 no cycles allowed
